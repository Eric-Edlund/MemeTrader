// A fullscreen page dedicated to a single stock

import {
  Grid,
  Container,
  Box,
  Tooltip,
  IconButton,
  Skeleton,
  useTheme,
} from "@mui/material";
import InfoIcon from "@mui/icons-material/Info";
import React, { useContext } from "react";
import { useState, useEffect, useReducer } from "react";
import { useParams } from "react-router-dom";
import OrderForm from "../components/BuySellView";
import LiveGraphView from "./../components/LiveGraph";
import { getStockMetadata, getStockPrice } from "../components/api";
import { ApplicationContext } from "../ApplicationContext";

export default function StockPage() {
  const { stockId } = useParams();

  const [metadata, setMetadata] = useState(null);
  const [price, setPrice] = useState(null);
  const [reloadTrigger, triggerReload] = useReducer((a) => a + 1, 0);

  const { authenticated, user } = useContext(ApplicationContext);

  useEffect(() => {
    async function fetchData() {
      setMetadata(await getStockMetadata(stockId));
      setPrice(await getStockPrice(stockId));
    }
    fetchData();
  }, [reloadTrigger, stockId]);

  return (
    <Container>
      <Grid container columnSpacing={1}>
        <Grid item xs={9}>
          <StockHeader metadata={metadata} price={price} />
          <LiveGraphView stockId={stockId} reloadTrigger={reloadTrigger} />
          <AboutSection metadata={metadata} />
        </Grid>

        <Grid
          item
          xs={3}
          paddingTop="2em"
          style={{ position: "sticky", top: "0px" }}
        >
          {metadata && price && user.userId ? (
            <OrderForm
              stockId={stockId}
              userId={user.userId}
              metadata={metadata}
              pricePerShare={price}
              onTransaction={triggerReload}
            />
          ) : (
            <Skeleton variant="rectangular" />
          )}
        </Grid>
      </Grid>
    </Container>
  );
}

function StockHeader({ metadata, price }) {
  return metadata ? (
    <h1>
      {metadata.title}
      <br></br>
      {(price / 100).toLocaleString("en-US", {
        style: "currency",
        currency: "USD",
      })}
    </h1>
  ) : (
    <>
      <Skeleton height="4em" width="20ch" variant="text" />
      <Skeleton width="10ch" variant="text" />
    </>
  );
}

function AboutSection({ metadata }) {
  const theme = useTheme();

  return (
    <Box>
      <Box display="flex">
        <h2>About</h2>
        <Tooltip title="The about section is generated by AI and may contain inaccurate or outdated information.">
          <IconButton>
            <InfoIcon />
          </IconButton>
        </Tooltip>
      </Box>

      {metadata ? (
        <p style={{ whiteSpace: "pre-wrap" }}>
          <img
            src={metadata.imageUrl}
            style={{
              maxWidth: "33%",
              maxHeight: "40ch",
              float: "right",
              boxShadow:
                theme.palette.mode === "dark"
                  ? "none"
                  : "0.5ch 0.5ch 0.5ch 0.5ch rgba(0,0,0,0.5)",
              margin: "1ch",
              marginTop: 0,
            }}
          />
          {metadata.description}
        </p>
      ) : (
        <>
          <Skeleton variant="text" height="3em" width="10ch" />
          <Skeleton variant="text" />
          <Skeleton variant="text" />
          <Skeleton variant="text" />
        </>
      )}
    </Box>
  );
}
